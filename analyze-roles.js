const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: "file:./prisma/dev.db"
    }
  }
})

async function analyzeRoles() {
  try {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã —Ä–æ–ª–µ–π...\n')
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏
    const roles = await prisma.role.findMany({
      include: {
        userRoles: {
          include: {
            user: {
              select: {
                email: true,
                name: true,
                tenant: {
                  select: { name: true }
                }
              }
            }
          }
        }
      }
    })
    
    console.log('üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏:')
    roles.forEach(role => {
      console.log(`\nüé≠ –†–æ–ª—å: ${role.name}`)
      console.log(`   ID: ${role.id}`)
      console.log(`   Tenant ID: ${role.tenantId || '–ì–ª–æ–±–∞–ª—å–Ω–∞—è'}`)
      console.log(`   –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${JSON.stringify(role.permissions, null, 2)}`)
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–æ–ª—å—é: ${role.userRoles.length}`)
      
      if (role.userRoles.length > 0) {
        console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:')
        role.userRoles.forEach(ur => {
          console.log(`     - ${ur.user.email} (${ur.user.name}) - ${ur.user.tenant?.name || '–ë–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'}`)
        })
      }
    })
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Ä–æ–ª—è–º–∏
    const users = await prisma.user.findMany({
      include: {
        UserRole: {
          include: {
            role: true
          }
        },
        tenant: true
      }
    })
    
    console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∏—Ö —Ä–æ–ª–∏:')
    users.forEach(user => {
      console.log(`\nüë§ ${user.email} (${user.name})`)
      console.log(`   –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${user.tenant?.name || '–ë–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'}`)
      console.log(`   Platform Owner: ${user.isPlatformOwner}`)
      console.log(`   –†–æ–ª–∏: ${user.UserRole.map(ur => ur.role.name).join(', ') || '–ù–µ—Ç —Ä–æ–ª–µ–π'}`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

analyzeRoles()
